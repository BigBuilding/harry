# Example configuration for Harry
# Copyright (C) 2013 Konrad Rieck (konrad@mlsec.org)
# --
# A detailed description of all configuration parameters is provided
# in the manual page, see harry(1).

# Input configuration
input = {
    # Input format.
    # Supported types: "dir", "arc", "lines", "fasta"
    input_format = "lines";

    # Decode strings using URI encoding (0 = off)
    decode_str = 0;

    # Regex for extracting labels from FASTA descriptions
    fasta_regex = " (\\+|-)?[0-9]+";

    # Regex for extracting labels from text lines
    lines_regex = "^(\\+|-)?[0-9]+";

    # Reverse (flip) the input strings (0 = off)
    reverse_str = 0;

    # Provide a file containing stop words (one per line)
    stopword_file = "";
}

measures = {

	# Selected similarity measure
	type = "dist_levenshtein";

	# Delimiters for string or empty string
	delim = "";

	# Cache size in megabytes.
	cache_size = 256;

	# Global cache (0 = off)
	global_cache = 0;

	# Module for Hamming distance
	dist_hamming = {
		# Normalization: "none", "min", "max" and "avg".
		norm = "none";
	};

	# Module for Levenshtein distance
	dist_levensthein = {
		# Normalization: "none", "min", "max" and "avg".
		norm = "none";
		
		# Costs for insertion, deletion and substitution
		cost_ins = 1.0;
		cost_del = 1.0;
		cost_sub = 1.0;
	}

	# Module for Damerau-Levenshtein distance
	dist_damerau = {
		# Normalization: "none", "min", "max" and "avg".
		norm = "none";

		# Costs for insertion, deletion, substitution and transposition
		cost_ins = 1.0;
		cost_del = 1.0;
		cost_sub = 1.0;
		cost_tra = 1.0;
	}

	# Module for Jaro-Winkler distance
	dist_jarowinkler = {
		# Scaling factor for prefixes.
		scaling = 0.1;
	}

	# Module for Lee distance
	dist_lee = {
		# Alphabet size. Choose 256 for bytes and 65536 for words.
		alphabet = 256;
	}

	# Module for compression distance
	dist_compression = {
		# Compression level between 1 and 9.
		level = 9;
	}

	# Module weighted-degree kernel
	kern_wdegree = {
		# Degree (k-mer/k-gram length)
		degree = 3;

		# Shift of kernel
		shift = 0;
	}

	# Module subsequence kernel
	kern_subsequence = {
		# Length of subsequences
		length = 3;

		# Weight for gaps;
		lambda = 0.1;
	}
}

# Configuration of output
output = {
    # Output format.
    # Supported formats: "text", "libsvm"
    output_format = "text";

    # Compress output
    compress = 0;
};
